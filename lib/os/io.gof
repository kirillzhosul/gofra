#include "general.gof"
#include "syscall.gof"

#ifdef OS_WINDOWS
    memory .win_write_console_bytes_written_buffer 8
    memory .win_gofra_print_fd_ptr_buffer 8 
    memory .win_gofra_print_fd_len_buffer 8
#endif

inline func void print_fd[int,ptr,int]
    // Print an string into given FD
    #ifdef OS_POSIX
        sc_write drop
    #endif
    #ifdef OS_WINDOWS
        .win_gofra_print_fd_ptr_buffer swap !<
        .win_gofra_print_fd_len_buffer swap !<

        copy // [handle, handle]
        
        GetFileType FILE_TYPE_CHAR == if 
            GetStdHandle
            .win_gofra_print_fd_ptr_buffer ?>
            .win_gofra_print_fd_len_buffer ?>
            .win_write_console_bytes_written_buffer 
            WriteConsoleA 
            drop return // [no handle]
        end

        .win_gofra_print_fd_ptr_buffer ?>
        .win_gofra_print_fd_len_buffer ?>
        .win_write_console_bytes_written_buffer 
        WINDOWS_RAW_WriteFile
        return // [no handle]
    #endif
end

memory .print_string_size_buffer 1
inline func void print[ptr,int]
    // Print an string into standart output stream (STDOUT for POSIX)
    .print_string_size_buffer swap !<
    #ifdef OS_POSIX
        POSIX_STDOUT swap
    #endif
    #ifdef OS_WINDOWS
        STD_OUTPUT_HANDLE swap
    #endif  
    .print_string_size_buffer ?> 
    print_fd
end

#ifdef OS_POSIX
    memory .print_integer_buffer 128
    memory .print_integer_divres 16
    memory .print_integer_idx 16
    inline func void print_integer[int]
        // Print given number into 
        // Negative numbers not supported for now
        copy 0 < if
            POSIX_STDERR "FATAL: print_integer got negative number!\n" print_fd abort
        end

        // Straight zero
        copy 0 == if
            .print_integer_buffer '0' !<
            .print_integer_buffer 1 + 20 !< // TODO(@kirillzhosul): At some time '\n' has been broken.
            .print_integer_buffer 2 print
        end

        .print_integer_divres swap !<
        .print_integer_idx 0 !<
        
        while .print_integer_divres ?> 0 > do
            .print_integer_divres ?> 10 %   
            .print_integer_buffer .print_integer_idx ?> + swap 48 + !<
            .print_integer_idx .print_integer_idx ?> inc !<
            
            .print_integer_divres copy ?> 10 / !< 
        end

        while .print_integer_idx ?> 1 + 0 > do
            .print_integer_buffer .print_integer_idx ?> + 1 print
            .print_integer_idx copy ?> dec !<
        end

        .print_integer_buffer 20 !<
        .print_integer_buffer 1 print
    end
#endif