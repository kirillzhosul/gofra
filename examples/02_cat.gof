
// ==============================================
// `cat` analogue
// Opens an text file from PATH macro and emits it content into standard
// ==============================================

#include "std.gof"

// TODO: add argc argv
#define PATH "test.txt" to_cstr_ptr

// Some segment in memory so we can store content of the file
#define CAPACITY 1024 // 1KiB

// Global one as capacity is too big for stack (heap)
var buf char[CAPACITY]

func void main[]
    var fd int
    
    // Open file (TODO: Windows analogue)
    &fd 
        PATH 0 0 
        call sc_open 
    !<

    // TODO(@kirillzhosul): Research why non-existent file returns STDERR FD
    &fd ?> 0 < if 
        "Unable to open given file\n" eprint_fatal 
    end

    // Read file
    &fd ?>
    &buf 
    sizeof buf
    call sc_read 
    
    0 < if 
        "Unable to read given file\n" eprint_fatal 
    end

    // Print whole buffer
    STD_OUT 
    &buf 
    sizeof buf 
    call print_fd drop
end